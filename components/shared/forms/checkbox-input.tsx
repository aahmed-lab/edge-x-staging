import classNames from 'classnames';
import { forwardRef } from 'react';
import Label from './label';

/******************************************************************
 *
 *  THIS COMPONENT WAS GENERATED BY NEXTCRAZY-CLI
 *
 ******************************************************************/

type Item = {
   label: string | React.ReactNode;
   value: string;
};

export type InputProps = {
   label?: React.ReactNode;
   error?: React.ReactNode;
   name?: string;
   id?: string;
   innerRef?: any;
   disabled?: boolean;
   placeHolder?: string;
   autoComplete?: string;
   className?: string;
   groupClassName?: string;
   options: Item[];
   isInline?: boolean;
   isRequired?: boolean;
   help?: React.ReactNode;
} & React.HTMLAttributes<HTMLInputElement | HTMLTextAreaElement>;

const CustomRadioInput = forwardRef<any, InputProps>(
   (
      {
         label,
         error,
         groupClassName,
         disabled = false,
         id = '',
         isInline = false,
         isRequired = false,
         help,
         options,
         ...props
      },
      ref
   ) => {
      return (
         <div className={groupClassName || classNames(isInline ? 'row' : 'relative mb-5  w-full')}>
            {label && (
               <div className={classNames(isInline ? 'col-3 mb-5 self-center' : '')}>
                  <Label id={id} label={label} isRequired={isRequired} />
               </div>
            )}
            <div className={classNames(isInline ? 'col-9 mb-5' : '')}>
               <div className="col-12">
                  <div className={classNames('')}>
                     {options.map((item, key) => (
                        <label
                           key={key}
                           className={classNames(
                              'flex cursor-pointer items-center space-x-2 rtl:space-x-reverse'
                           )}>
                           <input
                              id={id}
                              ref={ref}
                              type="checkbox"
                              className="checked:bg-white-dot form-checkbox border-accent-1 bg-transparent text-black focus:outline-none focus:ring focus:ring-accent-1 focus:ring-opacity-50 focus:ring-offset-0 focus:ring-offset-transparent"
                              value={item.value}
                              disabled={disabled}
                              {...props}
                           />
                           <div className="text-black">{item.label}</div>
                        </label>
                     ))}
                  </div>
                  {help && <div>{help}</div>}
                  {error && typeof error !== 'boolean' && (
                     <div className="absolute text-xs text-red-500" role="alert">
                        {error}
                     </div>
                  )}
               </div>
            </div>
         </div>
      );
   }
);

CustomRadioInput.displayName = `CustomRadioInput`;
export default CustomRadioInput;
