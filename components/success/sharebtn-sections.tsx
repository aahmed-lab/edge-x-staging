import { Translate, useTranslate } from '~/i18n';

import { FacebookIcon, LinkedinIcon, TwitterIcon } from 'next-share';
import { Icon } from '@iconify/react';
import classNames from 'classnames';
import Modal from '../shared/modals';
import React, { useEffect, useState } from 'react';
import styles from './styles/sharebtn-sections.module.css';
import Axios from '~/utils/axios';
import Cookies from 'js-cookie';
// import { fromBuffer } from 'pdf2pic';
// import { pdfToPng } from 'pdf-to-png-converter';
// import { GuestType } from '~/interfaces/guest';

// import { CopyToClipboard } from 'react-copy-to-clipboard';

// import { encodeURL } from 'js-base64';
/******************************************************************
 *
 *  THIS COMPONENT WAS GENERATED BY NEXTCRAZY-CLI
 *
 ******************************************************************/

const ShareBtnSections = () => {
   const [isOpen, setIsOpen] = useState(false);
   const data_en = `Join me at the Education Global Exhibition at csr-forum.com to explore global experiences and discuss the challenges and opportunities of transitioning to a data-driven, responsible growth economy.<br/><br/>#Global_CSR_Forum<br/>#From_Commitment_To_Impact`;
   const data_ar = `انضم إليّ في Education Global Exhibition عبر csr-forum.com لاستكشاف التجارب العالمية ومناقشة تحديات وفرص التحول إلى اقتصاد المعرفة.<br/><br/>#الملتقى_الدولي_للمسؤولية_الاجتماعية_2024<br/>#من_الالتزام_إلى_التأثير`;

   const dataShare_en = `Join me at the Education Global Exhibition at csr-forum.com to explore global experiences and discuss the challenges and opportunities of transitioning to a data-driven, responsible growth economy.\n\n#Global_CSR_Forum\n#From_Commitment_To_Impact`;
   const dataShare_ar = `انضم إليّ في Education Global Exhibition عبر csr-forum.com لاستكشاف التجارب العالمية ومناقشة تحديات وفرص التحول إلى اقتصاد المعرفة.\n\n#الملتقى_الدولي_للمسؤولية_الاجتماعية_2024\n#من_الالتزام_إلى_التأثير`;
   const [copied, setCopied] = useState(false);
   const { lang } = useTranslate();
   // const [pdfData, setPdfData] = useState('');
   const [poster, setPoster] = useState('');
   const [loading, setLoading] = useState(false);
   // const [category, setCategory] = useState('');

   const [loading2, setLoading2] = useState(false);

   const shareText = lang === 'en' ? dataShare_en : dataShare_ar; // Use the appropriate share text
   // const shareUrl = 'https://csr-forum.com'; // The URL to share
   // const posterUrl = `https://csr.eu-central-1.linodeobjects.com/social_card.png`; // The poster URL

   const test = () => {
      navigator.clipboard.writeText(lang === 'en' ? dataShare_en : dataShare_ar);
      if (copied) {
         return;
      }
      setCopied(true);
      setTimeout(() => {
         setCopied(false);
      }, 500);
   };

   useEffect(() => {
      const fetchData = async () => {
         const regId = JSON.parse(Cookies.get('reg_num') || '');

         try {
            if (loading) return;

            setLoading(true);
            const response = await Axios.get(`/get-social-card/${regId}?lang=${lang}`);
            setPoster(response.data.poster);
            // setCategory(response.data.category);

            setLoading(false);
         } catch (error: any) {
            console.log(error.response);
         }
      };
      if (isOpen) {
         fetchData();
      }
   }, [lang, isOpen, loading]);

   // const handleShare = (platform: any) => {
   //    let shareLink = '';
   //    switch (platform) {
   //       case 'twitter':
   //          shareLink = `https://twitter.com/intent/tweet?text=${encodeURIComponent(
   //             shareText
   //          )}&url=${encodeURIComponent(shareUrl)}&image=${encodeURIComponent(posterUrl)}`;
   //          break;
   //       case 'linkedin':
   //          shareLink = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(
   //             shareUrl
   //          )}&title=${encodeURIComponent(shareText)}&summary=${encodeURIComponent(
   //             shareText
   //          )}&source=${encodeURIComponent(shareUrl)}`;
   //          break;
   //       case 'facebook':
   //          shareLink = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(
   //             shareUrl
   //          )}&quote=${encodeURIComponent(shareText)}&picture=${encodeURIComponent(posterUrl)}`;
   //          break;
   //       default:
   //          break;
   //    }
   //    window.open(shareLink, '_blank');
   // };

   const startDownload = async () => {
      const regId = JSON.parse(Cookies.get('reg_num') || '');

      try {
         if (loading2) return;
         setLoading2(true);
         const response = await Axios({
            url: `/get-social-card-img/${regId}?lang=${lang}`,
            method: 'get',
            responseType: 'blob',
            // headers: {
            //    Authorization: `Bearer ${token}`,
            // },
         });
         const url = window.URL.createObjectURL(new Blob([response.data]));
         const link = document.createElement('a');
         link.href = url;
         // console.log(getExtension(response.data.type), 'getExtension(response.data.type)');

         link.setAttribute('download', `social_media_card.png`);
         document.body.appendChild(link);
         link.click();
         setLoading2(false);
      } catch (error: any) {
         console.log(error.response);
      }
   };

   const handleShare = (platform: any) => {
      let shareLink = '';
      switch (platform) {
         case 'twitter':
            shareLink = `https://twitter.com/intent/tweet?text=${encodeURIComponent(shareText)}`;
            break;
         case 'linkedin':
            shareLink = `https://www.linkedin.com/feed/?shareActive=true`;
            break;
         case 'facebook':
            shareLink = `https://www.facebook.com`;
            break;
         default:
            break;
      }
      window.open(shareLink, '_blank');
   };

   return (
      <React.Fragment>
         <button
            onClick={() => setIsOpen(true)}
            type="button"
            className={classNames(
               'mt-4 inline-flex items-center justify-center space-x-2 border border-gray-700 py-1 px-3 text-xl text-gray-700 rtl:space-x-reverse',
               'hover:bg-gray-700 hover:text-white'
            )}>
            <div>
               <Translate id="web:share" />
            </div>
            <div>
               <Icon icon={'ion:share-outline'} className="h-5 w-5" />
            </div>
         </button>

         <Modal size="md" open={isOpen}>
            <Modal.Body>
               <div className="">
                  <div className="relative rounded-lg border bg-white p-4 shadow-[0px_7px_29px_0px_rgba(100,100,111,0.2)] sm:px-10 sm:py-6">
                     <div className="">
                        <div className="text-xl font-bold">
                           <Translate id="web:step1_copy_content" />
                        </div>
                        <div className={classNames(styles['dashedBorder'], 'relative my-4 p-5')}>
                           <div
                              className="break-words"
                              dangerouslySetInnerHTML={{
                                 __html: lang === 'en' ? data_en : data_ar,
                              }}
                           />
                           {/* <CopyToClipboard text={msg} onCopy={() => setCopiedFunc()}> */}
                           <button
                              onClick={() => test()}
                              className="absolute bottom-3 z-10 w-[80px] bg-secondary px-2 text-white transition-colors duration-150 hover:bg-secondary-600 ltr:right-4 rtl:left-4 ">
                              {copied ? <Translate id="web:done" /> : <Translate id="web:copy" />}
                           </button>
                           {/* </CopyToClipboard> */}
                        </div>

                        <React.Fragment>
                           <div className={classNames(styles['dashedBorder'], 'relative my-4 p-5')}>
                              <div>
                                 {loading ? (
                                    <p>Loading image...</p>
                                 ) : (
                                    <div>
                                       {poster && (
                                          <img
                                             src={`${process.env.NEXT_PUBLIC_STORAGE_URL}/social_card/${poster}`}
                                             alt="poster"
                                          />
                                       )}
                                    </div>
                                 )}
                              </div>
                              {/* download btn */}
                              {poster && (
                                 <div className="text-right">
                                    <button
                                       onClick={() => {
                                          startDownload();
                                       }}
                                       // target="_blank"
                                       // rel="noopener noreferrer"
                                       // href={`${process.env.NEXT_PUBLIC_STORAGE_URL}/social_card/${poster}`}
                                       className="relative z-50 mt-2 bg-secondary px-2 text-white transition-colors duration-150 hover:bg-secondary-600">
                                       {loading2 ? 'Loading' : 'Download'}
                                    </button>
                                 </div>
                              )}
                           </div>
                        </React.Fragment>

                        <div className="text-xl font-bold">
                           <Translate id="web:step2_share_in_your_favorite_social_platforms" />
                        </div>
                     </div>

                     <div className="mt-4 flex justify-center space-x-6 rtl:space-x-reverse">
                        <button
                           onClick={() => handleShare('linkedin')}
                           className="flex items-center justify-center rounded-md border border-gray-300 bg-white p-2 hover:bg-gray-100">
                           <LinkedinIcon size={40} round />
                        </button>
                        <button
                           onClick={() => handleShare('twitter')}
                           className="flex items-center justify-center rounded-md border border-gray-300 bg-white p-2 hover:bg-gray-100">
                           <TwitterIcon size={40} round />
                        </button>
                        <button
                           onClick={() => handleShare('facebook')}
                           className="flex items-center justify-center rounded-md border border-gray-300 bg-white p-2 hover:bg-gray-100">
                           <FacebookIcon size={40} round />
                        </button>
                     </div>
                     <div className="mt-6">
                        <div className="row justify-center">
                           <div className="col-6 mb-4 md:mb-0 md:col-4">
                              <button
                                 type="button"
                                 className={classNames(
                                    'block w-full border border-secondary px-4 py-3 text-center text-sm font-medium leading-5 text-secondary transition-colors duration-150  focus:outline-none focus:ring  focus:ring-opacity-50  ',
                                    'disabled:cursor-not-allowed disabled:opacity-50',
                                    'enabled:focus:ring-accent'
                                 )}
                                 onClick={() => {
                                    // callBack(null, null);
                                    // clearFileInput();
                                    setIsOpen(false);
                                 }}>
                                 <Translate id="web:cancel" />
                              </button>
                           </div>
                        </div>
                     </div>
                  </div>
               </div>
            </Modal.Body>
         </Modal>
      </React.Fragment>
   );
};

export default ShareBtnSections;
